{"remainingRequest":"D:\\ysyf\\iguard-vue01\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ysyf\\iguard-vue01\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ysyf\\iguard-vue01\\src\\views\\permission\\department.vue?vue&type=template&id=746338e8&","dependencies":[{"path":"D:\\ysyf\\iguard-vue01\\src\\views\\permission\\department.vue","mtime":1587202308068},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586085021683},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1586085260820},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586085021683},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\vue-loader\\lib\\index.js","mtime":1586085255129}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"app-container\" },\n    [\n      _c(\n        \"div\",\n        {\n          staticStyle: {\n            \"margin-top\": \"20px\",\n            \"max-width\": \"600px\",\n            \"margin-left\": \"80px\"\n          }\n        },\n        [\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 30 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 10 } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"输入关键字进行过滤\", clearable: \"\" },\n                    model: {\n                      value: _vm.filterText,\n                      callback: function($$v) {\n                        _vm.filterText = $$v\n                      },\n                      expression: \"filterText\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-col\",\n                { attrs: { span: 30 } },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      directives: [\n                        {\n                          name: \"permission\",\n                          rawName: \"v-permission\",\n                          value: [\"/rest/department/companyAdd\"],\n                          expression: \"['/rest/department/companyAdd']\"\n                        }\n                      ],\n                      staticClass: \"filter-item\",\n                      attrs: { type: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.handleCreate()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"el-icon-plus\" }),\n                      _vm._v(\" 添加企业/部门\\n          \")\n                    ]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-row\",\n            { staticStyle: { \"padding-top\": \"20px\" } },\n            [\n              _c(\n                \"el-col\",\n                [\n                  _c(\"el-tree\", {\n                    ref: \"tree\",\n                    staticClass: \"permission-tree\",\n                    attrs: {\n                      data: _vm.departments,\n                      props: _vm.defaultProps,\n                      \"node-key\": \"id\",\n                      \"default-expand-all\": \"\",\n                      \"expand-on-click-node\": false,\n                      \"filter-node-method\": _vm.filterNode\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(ref) {\n                          var node = ref.node\n                          var data = ref.data\n                          return _c(\n                            \"span\",\n                            { staticClass: \"custom-tree-node\" },\n                            [\n                              _c(\"span\", [_vm._v(_vm._s(node.label))]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"span\",\n                                [\n                                  _c(\n                                    \"el-button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"permission\",\n                                          rawName: \"v-permission\",\n                                          value: [\"/rest/department/add\"],\n                                          expression: \"['/rest/department/add']\"\n                                        }\n                                      ],\n                                      attrs: { type: \"text\", size: \"mini\" },\n                                      on: {\n                                        click: function() {\n                                          return _vm.handleCreate(data)\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"添加子项\")]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"el-button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"permission\",\n                                          rawName: \"v-permission\",\n                                          value: [\"/rest/department/update\"],\n                                          expression:\n                                            \"['/rest/department/update']\"\n                                        }\n                                      ],\n                                      attrs: { type: \"text\", size: \"mini\" },\n                                      on: {\n                                        click: function() {\n                                          return _vm.handleEdit(node, data)\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"编辑\")]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"el-button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"permission\",\n                                          rawName: \"v-permission\",\n                                          value: [\"/rest/department/delete\"],\n                                          expression:\n                                            \"['/rest/department/delete']\"\n                                        }\n                                      ],\n                                      attrs: { type: \"text\", size: \"mini\" },\n                                      on: {\n                                        click: function() {\n                                          return _vm.handleDelete(data)\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"删除\")]\n                                  )\n                                ],\n                                1\n                              )\n                            ]\n                          )\n                        }\n                      }\n                    ])\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            visible: _vm.dialogVisible,\n            title: _vm.dialogType === \"edit\" ? \"编辑\" : \"新增\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"form\",\n              attrs: {\n                model: _vm.company,\n                rules: _vm.rules,\n                \"label-width\": \"80px\",\n                \"label-position\": \"right\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                {\n                  staticStyle: { width: \"100%\" },\n                  attrs: { label: \"类型\", prop: \"department.deptCompany\" }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择\" },\n                      on: { change: _vm.getDeptCompany },\n                      model: {\n                        value: _vm.company.department.deptCompany,\n                        callback: function($$v) {\n                          _vm.$set(_vm.company.department, \"deptCompany\", $$v)\n                        },\n                        expression: \"company.department.deptCompany\"\n                      }\n                    },\n                    [\n                      _c(\"el-option\", { attrs: { label: \"部门\", value: 1 } }),\n                      _vm._v(\" \"),\n                      _c(\"el-option\", { attrs: { label: \"企业\", value: 2 } })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.isCompany ? \"企业名称\" : \"部门名称\",\n                    prop: \"department.name\"\n                  }\n                },\n                [\n                  _c(\"el-input\", {\n                    attrs: {\n                      placeholder: _vm.isCompany ? \"企业名称\" : \"部门名称\"\n                    },\n                    model: {\n                      value: _vm.company.department.name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.company.department, \"name\", $$v)\n                      },\n                      expression: \"company.department.name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _vm.isDepartment\n                ? _c(\n                    \"el-form-item\",\n                    {\n                      attrs: { label: \"上级部门\", prop: \"department.parentId\" }\n                    },\n                    [\n                      _c(\"treeselect\", {\n                        attrs: {\n                          options: _vm.companySubDepartments,\n                          normalizer: _vm.normalizer,\n                          placeholder: \"选择上级部门\"\n                        },\n                        model: {\n                          value: _vm.company.department.parentId,\n                          callback: function($$v) {\n                            _vm.$set(_vm.company.department, \"parentId\", $$v)\n                          },\n                          expression: \"company.department.parentId\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.isCompany\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"管理账号\", prop: \"user.name\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"请输入手机号\" },\n                        model: {\n                          value: _vm.company.user.name,\n                          callback: function($$v) {\n                            _vm.$set(_vm.company.user, \"name\", $$v)\n                          },\n                          expression: \"company.user.name\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.isCompany\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"密码\", prop: \"user.password\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: {\n                          placeholder: \"请输入密码\",\n                          \"show-password\": \"\"\n                        },\n                        model: {\n                          value: _vm.company.user.password,\n                          callback: function($$v) {\n                            _vm.$set(_vm.company.user, \"password\", $$v)\n                          },\n                          expression: \"company.user.password\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.isCompany\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"真实姓名\", prop: \"user.vserName\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"请输入姓名\" },\n                        model: {\n                          value: _vm.company.user.vserName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.company.user, \"vserName\", $$v)\n                          },\n                          expression: \"company.user.vserName\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.isCompany\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"角色\", prop: \"user.roleIds\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          staticStyle: { width: \"100%\" },\n                          attrs: { multiple: \"\", placeholder: \"请选择\" },\n                          model: {\n                            value: _vm.company.user.roleIds,\n                            callback: function($$v) {\n                              _vm.$set(_vm.company.user, \"roleIds\", $$v)\n                            },\n                            expression: \"company.user.roleIds\"\n                          }\n                        },\n                        _vm._l(_vm.roles, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.id,\n                            attrs: { label: item.name, value: item.id }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"排序\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"排序\" },\n                    model: {\n                      value: _vm.company.department.sorts,\n                      callback: function($$v) {\n                        _vm.$set(_vm.company.department, \"sorts\", $$v)\n                      },\n                      expression: \"company.department.sorts\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticStyle: { \"text-align\": \"right\" } },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"danger\" },\n                  on: {\n                    click: function($event) {\n                      _vm.dialogVisible = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.confirmDepartment }\n                },\n                [_vm._v(\"确定\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: { visible: _vm.dialogVisibleEdit, title: \"编辑\" },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogVisibleEdit = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"form\",\n              attrs: {\n                model: _vm.company,\n                rules: _vm.rules,\n                \"label-width\": \"80px\",\n                \"label-position\": \"right\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                {\n                  staticStyle: { width: \"100%\" },\n                  attrs: { label: \"类型\", prop: \"department.deptCompany\" }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择\" },\n                      on: { change: _vm.getDeptCompany },\n                      model: {\n                        value: _vm.company.department.deptCompany,\n                        callback: function($$v) {\n                          _vm.$set(_vm.company.department, \"deptCompany\", $$v)\n                        },\n                        expression: \"company.department.deptCompany\"\n                      }\n                    },\n                    [\n                      _c(\"el-option\", { attrs: { label: \"部门\", value: 1 } }),\n                      _vm._v(\" \"),\n                      _c(\"el-option\", { attrs: { label: \"企业\", value: 2 } })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.isCompany ? \"企业名称\" : \"部门名称\",\n                    prop: \"department.name\"\n                  }\n                },\n                [\n                  _c(\"el-input\", {\n                    attrs: {\n                      placeholder: _vm.isCompany ? \"企业名称\" : \"部门名称\"\n                    },\n                    model: {\n                      value: _vm.company.department.name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.company.department, \"name\", $$v)\n                      },\n                      expression: \"company.department.name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _vm.isDepartment\n                ? _c(\n                    \"el-form-item\",\n                    {\n                      attrs: { label: \"上级部门\", prop: \"department.parentId\" }\n                    },\n                    [\n                      _c(\"treeselect\", {\n                        attrs: {\n                          options: _vm.companySubDepartments,\n                          normalizer: _vm.normalizer,\n                          placeholder: \"选择上级部门\"\n                        },\n                        model: {\n                          value: _vm.company.department.parentId,\n                          callback: function($$v) {\n                            _vm.$set(_vm.company.department, \"parentId\", $$v)\n                          },\n                          expression: \"company.department.parentId\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"排序\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"排序\" },\n                    model: {\n                      value: _vm.company.department.sorts,\n                      callback: function($$v) {\n                        _vm.$set(_vm.company.department, \"sorts\", $$v)\n                      },\n                      expression: \"company.department.sorts\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticStyle: { \"text-align\": \"right\" } },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"danger\" },\n                  on: {\n                    click: function($event) {\n                      _vm.dialogVisibleEdit = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.confirmDepartment }\n                },\n                [_vm._v(\"确定\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: { visible: _vm.dialogTopCompanyAdd, title: \"新增\" },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogTopCompanyAdd = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"form\",\n              attrs: {\n                model: _vm.company,\n                rules: _vm.rules,\n                \"label-width\": \"80px\",\n                \"label-position\": \"right\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"企业名称\", prop: \"department.name\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"企业名称\" },\n                    model: {\n                      value: _vm.company.department.name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.company.department, \"name\", $$v)\n                      },\n                      expression: \"company.department.name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"管理账号\", prop: \"user.name\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"请输入手机号\" },\n                    model: {\n                      value: _vm.company.user.name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.company.user, \"name\", $$v)\n                      },\n                      expression: \"company.user.name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"密码\", prop: \"user.password\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"请输入密码\", \"show-password\": \"\" },\n                    model: {\n                      value: _vm.company.user.password,\n                      callback: function($$v) {\n                        _vm.$set(_vm.company.user, \"password\", $$v)\n                      },\n                      expression: \"company.user.password\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"真实姓名\", prop: \"user.vserName\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"请输入姓名\" },\n                    model: {\n                      value: _vm.company.user.vserName,\n                      callback: function($$v) {\n                        _vm.$set(_vm.company.user, \"vserName\", $$v)\n                      },\n                      expression: \"company.user.vserName\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"角色\", prop: \"user.roleIds\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      staticStyle: { width: \"100%\" },\n                      attrs: { multiple: \"\", placeholder: \"请选择\" },\n                      model: {\n                        value: _vm.company.user.roleIds,\n                        callback: function($$v) {\n                          _vm.$set(_vm.company.user, \"roleIds\", $$v)\n                        },\n                        expression: \"company.user.roleIds\"\n                      }\n                    },\n                    _vm._l(_vm.roles, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.id,\n                        attrs: { label: item.name, value: item.id }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"排序\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"排序\" },\n                    model: {\n                      value: _vm.company.department.sorts,\n                      callback: function($$v) {\n                        _vm.$set(_vm.company.department, \"sorts\", $$v)\n                      },\n                      expression: \"company.department.sorts\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticStyle: { \"text-align\": \"right\" } },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"danger\" },\n                  on: {\n                    click: function($event) {\n                      _vm.dialogTopCompanyAdd = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.confirmDepartment }\n                },\n                [_vm._v(\"确定\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}