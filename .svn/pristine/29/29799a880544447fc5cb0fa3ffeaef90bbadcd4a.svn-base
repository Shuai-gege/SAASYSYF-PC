{"remainingRequest":"D:\\ysyf\\vue-link-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ysyf\\vue-link-admin-master\\src\\views\\permission\\job.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ysyf\\vue-link-admin-master\\src\\views\\permission\\job.vue","mtime":1578643849000},{"path":"D:\\ysyf\\vue-link-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ysyf\\vue-link-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\ysyf\\vue-link-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ysyf\\vue-link-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport permission from '@/directive/permission/index.js' // 权限判断指令\nimport {\n  jobList,\n  addJob,\n  updateJob,\n  updateState,\n  deleteJob\n} from '@/api/permission/job'\n\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport { deepClone } from '@/utils'\nconst defaultJob = {\n  id: undefined,\n  name: '',\n  state: 1,\n  sorts: undefined\n}\nexport default {\n  name: 'Job',\n  components: { Pagination },\n  directives: { permission },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: false,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        name: ''\n      },\n      job: Object.assign({}, defaultJob),\n      dialogVisible: false,\n      dialogType: 'new',\n      rules: {\n        name: [\n          { required: true, message: '请输入岗位名', trigger: 'blur' },\n          { min: 2, max: 15, message: '长度在 2 到 15 个字符', trigger: 'blur' }\n        ],\n        state: [{ required: true, message: '请选择状态', trigger: 'change' }]\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    async getList() {\n      this.listLoading = true\n      // If the Promise is rejected, the rejected value is thrown.\n      try {\n        const res = await jobList(this.listQuery)\n        this.listLoading = false\n        this.list = res.result.rows\n        this.total = res.result.records\n      } catch (e) {\n        this.listLoading = false\n      }\n    },\n    handleSearch() {\n      this.getList()\n    },\n    // 状态修改\n    handleStateChange(row) {\n      const text = row.state === 1 ? '启用' : '停用'\n      this.$confirm(\n        '确认要 [' + text + '] [' + row.name + '] 岗位吗?',\n        '警告',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      )\n        .then(async() => {\n          await updateState({ id: row.id, state: row.state })\n          this.$message({\n            message: text + '成功',\n            type: 'success'\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          row.state = row.state === 0 ? 1 : 0\n        })\n    },\n    handleCreate() {\n      this.dialogType = 'new'\n      this.dialogVisible = true\n    },\n    handleEdit(scope) {\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.job = deepClone(scope.row)\n    },\n    async confirmRole() {\n      const isEdit = this.dialogType === 'edit'\n      if (isEdit) {\n        await updateJob(this.job)\n      } else {\n        await addJob(this.job)\n      }\n      this.dialogVisible = false\n      this.$message({\n        showClose: true,\n        message: '保存成功',\n        type: 'success'\n      })\n      this.getList()\n    },\n    handleDelete({ row }) {\n      this.$confirm('确认删除?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(async() => {\n          await deleteJob(row.id)\n          this.$message({\n            showClose: true,\n            message: '删除成功',\n            type: 'success'\n          })\n          this.getList()\n        })\n        .catch(err => {\n          console.error(err)\n        })\n    }\n  }\n}\n",null]}