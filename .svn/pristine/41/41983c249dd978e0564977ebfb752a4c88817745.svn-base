{"remainingRequest":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\src\\views\\kejenkj\\upload\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\src\\views\\kejenkj\\upload\\index.vue","mtime":1579485715588},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getToken } from '@/utils/auth'\nimport {\n  uploadList,editUpload\n} from '@/api/kejenkj/upload'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport {formatTimeToStr} from '@/utils/dateUtil'\nimport { deepClone } from '@/utils'\nconst token = getToken()\nconst uploadVO = {\n  nickName: '',\n  id : '',\n  uid : '',\n  title : '',\n  description: '',\n  cloudUrl: '',\n  cloudCode: '',\n  fileName: '',\n  fileUrl: '',\n  predictScore: '',\n  createTime: '',\n  examineFlag: '',\n  examineTime: '',\n  actualScore: '',\n  uploadType: '',\n  redeemNos: '',\n  postFix: '',\n  remark: ''\n\n}\n\nexport default {\n  name: `Upload`,\n  components: { Pagination},\n  data(){\n    return{\n      list: null,\n      total: 0,\n      tableKey: 0,\n      listLoading: false,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        title: '', // 资料名称\n        description: '', // 资料描述\n        createTime: '', // 上传时间\n        nickName: '', // 上传人\n        examineFlag: '', // 审核标记\n        uploadType: [\n          {\n            value: '0',\n            label: '上架'\n          },{\n            value: '1',\n            label: '赎回'\n          }\n        ]\n\n      },\n      headersObj: { 'LinkAdmin-Token': token },\n      activeName: 'first',\n      dialogVisible: false,\n      dialogType: 'new',\n      uploadVO: Object.assign({}, uploadVO),\n      rules:{\n        examineFlag:[{ required: true, message: '请选择审核状态', trigger: 'change' }],\n      }\n    }\n  },\n  watch: {\n    searchDeptName(val) {\n      this.$refs.serchDeptTree.filter(val)\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods:{\n    async getList() {\n      this.listLoading = true\n      // If the Promise is rejected, the rejected value is thrown.\n      try {\n        const res = await uploadList(this.listQuery)\n        this.listLoading = false\n        this.list = res.result.rows\n        this.total = res.result.records\n      } catch (e) {\n        this.listLoading = false\n      }\n    },\n    // 查询\n    handleSearch() {\n      this.getList()\n    },\n    formatDateTime(row, column) {\n      return formatTimeToStr(row.createTime, 'yyyy-MM-dd hh:mm:ss')\n    },\n    formatDateTimeTemp(tt) {\n      return formatTimeToStr(tt, 'yyyy-MM-dd hh:mm:ss')\n    },\n    // 审核标记转换\n    shenhebj(row,column){\n      const tt = row.examineFlag;\n      if(tt == '0'){\n         return '未审核';\n      }\n      if(tt == '1'){\n        return '审核通过';\n      }\n      if(tt == '2'){\n        return '审核未通过';\n      }\n    },\n    // 上传类型转换\n    uploadType(row,column){\n      const tt = row.uploadType;\n      if(tt == '0'){\n        return '上架';\n      }\n      if(tt == '1'){\n        return '赎回';\n      }\n    },\n    // 点击编辑按钮触发\n    handleEdit(scope) {\n      debugger;\n      this.dialogVisible = true\n      this.uploadVO = deepClone(scope.row)\n      const tt = this.uploadVO.createTime;\n      this.uploadVO.createTime = this.formatDateTimeTemp(tt);\n    },\n    // 编辑功能结束，点击确定按钮触发\n    async confirmUpload() {\n      const examineFlag = this.uploadVO.examineFlag;\n      const remark = this.uploadVO.remark;\n      if (examineFlag == 2 && (remark == null || remark == undefined || remark.trim() == '')) {\n        this.$message({\n          showClose: true,\n          message: '审核未通过,必须备注原因哦~',\n          type: 'error'\n        })\n        return;\n      }\n      this.uploadVO.createTime = this.formatDateTimeTemp(this.uploadVO.createTime);\n      this.uploadVO.examineTime = this.formatDateTimeTemp(this.uploadVO.examineTime);\n      const res = await editUpload(this.uploadVO);\n      const result = res.result;\n      if(result){\n        this.$message({\n          showClose: true,\n          message: '编辑成功',\n          type: 'success'\n        })\n        this.dialogVisible = false;\n        this.getList();\n      }\n    }\n  }\n}\n",null]}