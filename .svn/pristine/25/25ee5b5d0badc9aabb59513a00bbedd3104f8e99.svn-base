{"remainingRequest":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\thread-loader\\dist\\cjs.js!D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\src\\directive\\permission\\permission.js","dependencies":[{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\src\\directive\\permission\\permission.js","mtime":1577239198000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport store from '@/store';\nexport default {\n  inserted: function inserted(el, binding, vnode) {\n    var value = binding.value;\n    var permissions = store.getters && store.getters.permissions;\n\n    if (value && value instanceof Array && value.length > 0 && permissions) {\n      var hasPermission = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = permissions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var perm = _step.value;\n\n          if (perm.url === value[0]) {\n            hasPermission = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (!hasPermission) {\n        el.remove();\n      }\n    } else {\n      throw new Error(\"need permissions! Like v-permission=\\\"['/rest/user/list']\\\"\");\n    }\n  }\n};",null]}