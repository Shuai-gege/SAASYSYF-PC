{"remainingRequest":"D:\\ysyf\\iguard-vue01\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ysyf\\iguard-vue01\\src\\views\\permission\\department.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ysyf\\iguard-vue01\\src\\views\\permission\\department.vue","mtime":1587202308068},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586085021683},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\babel-loader\\lib\\index.js","mtime":1586085013966},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586085021683},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\vue-loader\\lib\\index.js","mtime":1586085255129}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import the component\nimport Treeselect from '@riophae/vue-treeselect'\n// import the styles\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport permission from '@/directive/permission/index.js' // 权限判断指令\nimport {\n  departments,\n  subDepartments,\n  addDpartment,\n  updateDpartment,\n  deleteDpartment,\n  addCompany,\n  addTopCompany,\n  companySubDeptList\n} from '@/api/permission/department'\nimport { roles } from '@/api/permission/role'\nimport { deepClone } from '@/utils'\n\nconst defaultDepartment = {\n  id: undefined,\n  name: '',\n  parentId: undefined,\n  parentName: '',\n  levels: undefined,\n  deleted: 0,\n  deptCompany: 1\n};\n\nconst defaultUser = {\n  name: '',\n  password: '',\n  vserName: '',\n  roleIds: []\n};\n\nconst defaultCompany = {\n  department: {\n    id: undefined,\n    name: '',\n    parentId: undefined,\n    parentName: '',\n    levels: undefined,\n    deleted: 0,\n    deptCompany: 1\n  },\n  user: {\n    name: '',\n    password: '',\n    vserName: '',\n    roleIds: []\n  }\n};\n\nexport default {\n  name: 'Department',\n  components: { Treeselect },\n  directives: { permission },\n  data() {\n    const checkPhoneNo = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('请输入正确的账号'));\n      }\n      if(!(/^1(3|4|5|6|7|8|9)\\d{9}$/.test(value))){\n        return callback(new Error('请输入正确的账号'));\n      }\n    };\n\n    return {\n      defaultProps: {\n        children: 'childrens',\n        label: 'name'\n      },\n      department: Object.assign({}, defaultDepartment),\n      user: Object.assign({}, defaultUser),\n      departments: [],\n      companySubDepartments: [],\n      roles: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      dialogTopCompanyAdd:false,\n      dialogVisibleEdit:false,\n      isCompany: false,\n      isDepartment: true,\n      company: Object.assign({}, defaultCompany),\n      levelsOptions: [\n        { label: '集团', key: 0 },\n        { label: '分公司', key: 1 },\n        { label: '部门', key: 2 }\n      ],\n      filterText: '',\n      rules: {\n        ['department.deptCompany']:[\n          {required: true, message: '请选择部门类型', trigger: 'change' }\n          ],\n        ['department.name']: [\n          { required: true, message: '请输入部门名', trigger: 'blur' },\n          { min: 2, max: 15, message: '长度在 2 到 15 个字符', trigger: 'blur' }\n        ],\n        ['department.parentId']: [\n          { required: true, message: '请选择上级部门', trigger: 'change' }\n        ],\n        ['user.name']: [\n          { required: true, message: '请输入正确的账号', trigger: 'blur' },\n          { validator: checkPhoneNo, trigger: 'blur' },\n        ],\n        // ['user.password']: [\n        //   { required: true, message: '请输入密码', trigger: 'blur' },\n        //   // { min: 6, max: 20, message: '请输入正确的密码', trigger: 'blur' }\n        // ],\n        ['user.vserName']: [\n          { required: true, message: '请输入姓名', trigger: 'blur' },\n        ],\n        ['user.roleIds']: [\n          { required: true, message: '请选择角色', trigger: 'change' },\n        ]\n      }\n    }\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val)\n    }\n  },\n\n  created() {\n    // this.getDepartments();\n    this.getRoles();\n    this.getSubDepartments();\n    this.getCompanySubDepartments();\n  },\n  methods: {\n    async getSubDepartments() {\n      const res = await subDepartments();\n      const result = res.result\n      this.diGuiTree(result)\n      // this.departments = [{ id: 0, name: '部门树', childrens: result }]\n      this.departments = result;\n    },\n\n    async getCompanySubDepartments() {\n      const res = await companySubDeptList();\n      const result = res.result\n      this.diGuiTree(result)\n      // this.departments = [{ id: 0, name: '部门树', childrens: result }]\n      this.companySubDepartments = result;\n    },\n\n    async getRoles() {\n      const res = await roles()\n      this.roles = res.result\n    },\n\n\n    getDeptCompany() {\n      if (2 === this.company.department.deptCompany){\n        this.isCompany = true;\n        this.isDepartment = false;\n      }else {\n        this.isCompany = false;\n        this.isDepartment = true;\n      }\n    },\n\n\n    filterNode(value, data) {\n      if (!value) return true\n      return data.name.indexOf(value) !== -1\n    },\n    diGuiTree(item) {\n      // 递归便利树结构\n      item.forEach(item => {\n        item.childrens === '' ||\n        item.childrens === undefined ||\n        item.childrens === null\n          ? delete item.childrens\n          : this.diGuiTree(item.childrens)\n      })\n    },\n    normalizer(node) {\n      return {\n        id: node.id,\n        label: node.name,\n        children: node.childrens\n      }\n    },\n\n    topCompanyCreate(data) {\n      this.dialogTopCompanyAdd = true;\n      this.dialogType = 'topCompanyAdd';\n      this.company = Object.assign({}, defaultCompany)\n      this.user =  Object.assign({}, defaultUser);\n      // this.department.deptCompany = 2;\n      // if (data != null) {\n      //   this.department.parentName = data.name\n      // }\n    },\n\n    handleCreate(data) {\n      this.dialogType = 'new';\n      this.dialogVisible = true;\n      this.company.department = Object.assign({}, defaultCompany.department);\n      this.company.user = Object.assign({}, defaultCompany.user);\n\n      // if (data != null) {\n      //   this.department.parentId = data.id\n      //   this.department.parentName = data.name\n      // }\n\n      if (2 === this.company.department.deptCompany){\n        this.isCompany = true;\n        this.isDepartment = false;\n      }else {\n        this.isCompany = false;\n        this.isDepartment = true;\n      }\n    },\n\n    async handleEdit(node, data) {\n      this.dialogType = 'edit'\n      this.dialogVisibleEdit = true;\n      this.company.department = deepClone(data);\n      // const parent = node.parent.data;\n      // this.department.parentId = parent.id;\n      // this.department.parentName = parent.name;\n\n      if (2 === this.company.department.deptCompany){\n        this.isCompany = true;\n        this.isDepartment = false;\n      }else {\n        this.isCompany = false;\n        this.isDepartment = true;\n      }\n\n    },\n    async confirmDepartment() {\n      // const isEdit = this.dialogType === 'edit'\n      if (this.dialogType === 'edit') {\n        await updateDpartment(this.company.department);\n      } else if (this.dialogType === 'new') {\n        if (this.company.user.password.length < 1){\n          this.company.user.password = this.company.user.name;\n        }\n        await addCompany(this.company)\n      } else if (this.dialogType === 'topCompanyAdd'){\n        await addTopCompany(this.company)\n      }\n      this.dialogVisible = false;\n      this.dialogTopCompanyAdd = false;\n      this.dialogVisibleEdit = false;\n\n      this.$message({\n        showClose: true,\n        message: '保存成功',\n        type: 'success'\n      });\n      this.getSubDepartments()\n    },\n    handleDelete(data) {\n      this.$confirm('确认删除?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(async() => {\n          await deleteDpartment(data.id)\n          this.$message({\n            showClose: true,\n            message: '删除成功',\n            type: 'success'\n          })\n          this.getSubDepartments()\n        })\n        .catch(err => {\n          console.error(err)\n        })\n    }\n  }\n}\n",null]}