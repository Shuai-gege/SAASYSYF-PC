{"remainingRequest":"D:\\workspace\\selfcompanyworkspace\\line-code\\vue-link-admin-master\\node_modules\\thread-loader\\dist\\cjs.js!D:\\workspace\\selfcompanyworkspace\\line-code\\vue-link-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\selfcompanyworkspace\\line-code\\vue-link-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workspace\\selfcompanyworkspace\\line-code\\vue-link-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\selfcompanyworkspace\\line-code\\vue-link-admin-master\\src\\views\\component\\upload\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\selfcompanyworkspace\\line-code\\vue-link-admin-master\\src\\views\\component\\upload\\index.vue","mtime":1578643849000},{"path":"D:\\workspace\\selfcompanyworkspace\\line-code\\vue-link-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\line-code\\vue-link-admin-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\line-code\\vue-link-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\line-code\\vue-link-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\line-code\\vue-link-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\workspace\\\\selfcompanyworkspace\\\\line-code\\\\vue-link-admin-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getToken } from '@/utils/auth';\nimport { tiktokList, deleteTikTok } from '@/api/video/tiktok';\nimport Pagination from '@/components/Pagination'; // Secondary package based on el-pagination\n\nimport { formatDateTime as _formatDateTime } from '@/utils';\nvar token = getToken();\nexport default {\n  name: 'Upload',\n  components: {\n    Pagination: Pagination\n  },\n  data: function data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: false,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        name: ''\n      },\n      headersObj: {\n        'LinkAdmin-Token': token\n      },\n      uplodatPath: process.env.VUE_APP_BASE_API_URL + '/rest/video/tiktok/upload',\n      dialogVisible: false,\n      dialogVisible1: false,\n      dialogType: 'new',\n      videoUrl: ''\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    getList: function () {\n      var _getList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.listLoading = true; // If the Promise is rejected, the rejected value is thrown.\n\n                _context.prev = 1;\n                _context.next = 4;\n                return tiktokList(this.listQuery);\n\n              case 4:\n                res = _context.sent;\n                this.listLoading = false;\n                this.list = res.result.rows;\n                this.total = res.result.records;\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                this.listLoading = false;\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 10]]);\n      }));\n\n      function getList() {\n        return _getList.apply(this, arguments);\n      }\n\n      return getList;\n    }(),\n    handleSearch: function handleSearch() {\n      this.getList();\n    },\n    formatDateTime: function formatDateTime(row, column) {\n      return _formatDateTime(row.createtime);\n    },\n    beforeUploadVideo: function beforeUploadVideo(file) {\n      var isLt10M = file.size / 1024 / 1024 < 50;\n\n      if (['video/mp4', 'video/ogg', 'video/flv', 'video/avi', 'video/wmv', 'video/rmvb'].indexOf(file.type) === -1) {\n        this.$message.error('请上传正确的视频格式');\n        return false;\n      }\n\n      if (!isLt10M) {\n        this.$message.error('上传视频大小不能超过50MB哦!');\n        return false;\n      }\n    },\n    handleVideoSuccess: function handleVideoSuccess(res, file) {\n      // 获取上传图片地址\n      if (res.code === 20000) {\n        this.$message.success('上传成功');\n        this.getList();\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    handleCreate: function handleCreate() {\n      this.dialogType = 'new';\n      this.dialogVisible = true;\n    },\n    handleView: function handleView(_ref) {\n      var row = _ref.row;\n      this.dialogVisible1 = true;\n      this.videoUrl = process.env.VUE_APP_BASE_API_URL + '/rest/video/tiktok/view?path=' + row.name;\n    },\n    handleDelete: function handleDelete(_ref2) {\n      var _this = this;\n\n      var row = _ref2.row;\n      this.$confirm('确认删除?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return deleteTikTok(row.id);\n\n              case 2:\n                _this.$message({\n                  showClose: true,\n                  message: '删除成功',\n                  type: 'success'\n                });\n\n                _this.getList();\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))).catch(function (err) {\n        console.error(err);\n      });\n    }\n  }\n};",null]}