{"remainingRequest":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\src\\views\\permission\\department.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\src\\views\\permission\\department.vue","mtime":1577239198000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\workspace\\\\selfcompanyworkspace\\\\vue-link-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:\\\\workspace\\\\selfcompanyworkspace\\\\vue-link-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _vueTreeselect = _interopRequireDefault(require(\"@riophae/vue-treeselect\"));\n\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\n\nvar _index = _interopRequireDefault(require(\"@/directive/permission/index.js\"));\n\nvar _department = require(\"@/api/permission/department\");\n\nvar _utils = require(\"@/utils\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import the component\n// import the styles\n// 权限判断指令\nvar defaultDepartment = {\n  id: undefined,\n  name: '',\n  parentId: undefined,\n  parentName: '',\n  levels: undefined,\n  deleted: 0\n};\nvar _default = {\n  name: 'Department',\n  components: {\n    Treeselect: _vueTreeselect.default\n  },\n  directives: {\n    permission: _index.default\n  },\n  data: function data() {\n    return {\n      defaultProps: {\n        children: 'childrens',\n        label: 'name'\n      },\n      department: Object.assign({}, defaultDepartment),\n      departments: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      levelsOptions: [{\n        label: '集团',\n        key: 0\n      }, {\n        label: '分公司',\n        key: 1\n      }, {\n        label: '部门',\n        key: 2\n      }],\n      filterText: '',\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入部门名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 15,\n          message: '长度在 2 到 15 个字符',\n          trigger: 'blur'\n        }],\n        parentId: [{\n          required: true,\n          message: '请选择上级部门',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  watch: {\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  created: function created() {\n    this.getDepartments();\n  },\n  methods: {\n    getDepartments: function () {\n      var _getDepartments = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res, result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _department.departments)();\n\n              case 2:\n                res = _context.sent;\n                result = res.result;\n                this.diGuiTree(result);\n                this.departments = [{\n                  id: 0,\n                  name: '部门树',\n                  childrens: result\n                }];\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getDepartments() {\n        return _getDepartments.apply(this, arguments);\n      }\n\n      return getDepartments;\n    }(),\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value) !== -1;\n    },\n    diGuiTree: function diGuiTree(item) {\n      var _this = this;\n\n      // 递归便利树结构\n      item.forEach(function (item) {\n        item.childrens === '' || item.childrens === undefined || item.childrens === null ? delete item.childrens : _this.diGuiTree(item.childrens);\n      });\n    },\n    normalizer: function normalizer(node) {\n      return {\n        id: node.id,\n        label: node.name,\n        children: node.childrens\n      };\n    },\n    handleCreate: function handleCreate(data) {\n      this.dialogType = 'new';\n      this.dialogVisible = true;\n      this.department = Object.assign({}, defaultDepartment);\n\n      if (data != null) {\n        this.department.parentId = data.id;\n        this.department.parentName = data.name;\n      }\n    },\n    handleEdit: function () {\n      var _handleEdit = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(node, data) {\n        var parent;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.dialogType = 'edit';\n                this.dialogVisible = true;\n                this.department = (0, _utils.deepClone)(data);\n                parent = node.parent.data;\n                this.department.parentId = parent.id;\n                this.department.parentName = parent.name;\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleEdit(_x, _x2) {\n        return _handleEdit.apply(this, arguments);\n      }\n\n      return handleEdit;\n    }(),\n    confirmDepartment: function () {\n      var _confirmDepartment = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var isEdit;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                isEdit = this.dialogType === 'edit';\n\n                if (!isEdit) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 4;\n                return (0, _department.updateDpartment)(this.department);\n\n              case 4:\n                _context3.next = 8;\n                break;\n\n              case 6:\n                _context3.next = 8;\n                return (0, _department.addDpartment)(this.department);\n\n              case 8:\n                this.dialogVisible = false;\n                this.$message({\n                  showClose: true,\n                  message: '保存成功',\n                  type: 'success'\n                });\n                this.getDepartments();\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function confirmDepartment() {\n        return _confirmDepartment.apply(this, arguments);\n      }\n\n      return confirmDepartment;\n    }(),\n    handleDelete: function handleDelete(data) {\n      var _this2 = this;\n\n      this.$confirm('确认删除?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(\n      /*#__PURE__*/\n      (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _department.deleteDpartment)(data.id);\n\n              case 2:\n                _this2.$message({\n                  showClose: true,\n                  message: '删除成功',\n                  type: 'success'\n                });\n\n                _this2.getDepartments();\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))).catch(function (err) {\n        console.error(err);\n      });\n    }\n  }\n};\nexports.default = _default;",null]}