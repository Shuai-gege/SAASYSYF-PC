{"remainingRequest":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\thread-loader\\dist\\cjs.js!D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\src\\utils\\index.js","dependencies":[{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\src\\utils\\index.js","mtime":1577239198000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport _typeof from \"D:\\\\workspace\\\\selfcompanyworkspace\\\\vue-link-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\n\n/**\n * Created by 252956 on 2019/10/21.\n */\n\n/**\n * 返回当前日期:yyyy-MM-dd\n */\nexport function getDate() {\n  var t = new Date();\n  var dt = t.getFullYear() + '-' + (t.getMonth() + 1) + '-' + t.getDate();\n  return dt;\n}\n/**\n * 返回当前日期:yyyy-MM-dd HH:mm:ss\n */\n\nexport function getDateTime() {\n  var t = new Date();\n  var dt = t.getFullYear() + '-' + (t.getMonth() + 1) + '-' + t.getDate() + ' ' + t.getHours() + ':' + t.getMinutes() + ':' + t.getSeconds();\n  return dt;\n}\n/**\n * 偏移分钟\n *\n * @param date\n *            日期\n * @param offset\n *            偏移小时数，正数向未来偏移，负数向历史偏移\n * @return 偏移后的日期\n */\n\nexport function offsetMinute(shijianchuo, offset) {\n  // eslint-disable-next-line eqeqeq\n  if (shijianchuo == 0 || shijianchuo == '' || shijianchuo == null) {\n    return '';\n  }\n\n  var time = new Date(shijianchuo);\n  time = new Date(time.valueOf() + offset * 60 * 1000);\n  var y = time.getFullYear();\n  var m = time.getMonth() + 1;\n  var d = time.getDate();\n  var h = time.getHours();\n  var mm = time.getMinutes();\n  var s = time.getSeconds();\n  return y + '-' + add0(m) + '-' + add0(d) + ' ' + add0(h) + ':' + add0(mm) + ':' + add0(s);\n}\n/**\n * 格式化时间为： yyyy-MM-dd\n * @param {*} date 对象或时间戳\n */\n\nexport function formatDate(shijianchuo) {\n  // eslint-disable-next-line eqeqeq\n  if (shijianchuo == 0 || shijianchuo == '' || shijianchuo == null) {\n    return '';\n  }\n\n  var time = new Date(shijianchuo);\n  var y = time.getFullYear();\n  var m = time.getMonth() + 1;\n  var d = time.getDate();\n  return y + '-' + add0(m) + '-' + add0(d);\n}\n/**\n * 格式化时间为： yyyy-MM-dd HH:mm:ss\n * @param {*} date 对象或时间戳\n */\n\nexport function formatDateTime(shijianchuo) {\n  // eslint-disable-next-line eqeqeq\n  if (shijianchuo == 0 || shijianchuo == '' || shijianchuo == null) {\n    return '';\n  }\n\n  var time = new Date(shijianchuo);\n  var y = time.getFullYear();\n  var m = time.getMonth() + 1;\n  var d = time.getDate();\n  var h = time.getHours();\n  var mm = time.getMinutes();\n  var s = time.getSeconds();\n  return y + '-' + add0(m) + '-' + add0(d) + ' ' + add0(h) + ':' + add0(mm) + ':' + add0(s);\n}\n/*\n  * 时间戳转时间内部调用\n  */\n\nvar add0 = function add0(m) {\n  return m < 10 ? '0' + m : m;\n};\n/**\n * @param {string} url\n * @returns {Object}\n */\n\n\nexport function getQueryObject(url) {\n  url = url == null ? window.location.href : url;\n  var search = url.substring(url.lastIndexOf('?') + 1);\n  var obj = {};\n  var reg = /([^?&=]+)=([^?&=]*)/g;\n  search.replace(reg, function (rs, $1, $2) {\n    var name = decodeURIComponent($1);\n    var val = decodeURIComponent($2);\n    val = String(val);\n    obj[name] = val;\n    return rs;\n  });\n  return obj;\n}\n/**\n * @param {string} input value\n * @returns {number} output value\n */\n\nexport function byteLength(str) {\n  // returns the byte length of an utf8 string\n  var s = str.length;\n\n  for (var i = str.length - 1; i >= 0; i--) {\n    var code = str.charCodeAt(i);\n    if (code > 0x7f && code <= 0x7ff) s++;else if (code > 0x7ff && code <= 0xffff) s += 2;\n    if (code >= 0xDC00 && code <= 0xDFFF) i--;\n  }\n\n  return s;\n}\n/**\n * @param {Array} actual\n * @returns {Array}\n */\n\nexport function cleanArray(actual) {\n  var newArray = [];\n\n  for (var i = 0; i < actual.length; i++) {\n    if (actual[i]) {\n      newArray.push(actual[i]);\n    }\n  }\n\n  return newArray;\n}\n/**\n * @param {Object} json\n * @returns {Array}\n */\n\nexport function param(json) {\n  if (!json) return '';\n  return cleanArray(Object.keys(json).map(function (key) {\n    if (json[key] === undefined) return '';\n    return encodeURIComponent(key) + '=' + encodeURIComponent(json[key]);\n  })).join('&');\n}\n/**\n * @param {string} url\n * @returns {Object}\n */\n\nexport function param2Obj(url) {\n  var search = url.split('?')[1];\n\n  if (!search) {\n    return {};\n  }\n\n  return JSON.parse('{\"' + decodeURIComponent(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"').replace(/\\+/g, ' ') + '\"}');\n}\n/**\n * @param {string} val\n * @returns {string}\n */\n\nexport function html2Text(val) {\n  var div = document.createElement('div');\n  div.innerHTML = val;\n  return div.textContent || div.innerText;\n}\n/**\n * Merges two objects, giving the last one precedence\n * @param {Object} target\n * @param {(Object|Array)} source\n * @returns {Object}\n */\n\nexport function objectMerge(target, source) {\n  if (_typeof(target) !== 'object') {\n    target = {};\n  }\n\n  if (Array.isArray(source)) {\n    return source.slice();\n  }\n\n  Object.keys(source).forEach(function (property) {\n    var sourceProperty = source[property];\n\n    if (_typeof(sourceProperty) === 'object') {\n      target[property] = objectMerge(target[property], sourceProperty);\n    } else {\n      target[property] = sourceProperty;\n    }\n  });\n  return target;\n}\n/**\n * @param {HTMLElement} element\n * @param {string} className\n */\n\nexport function toggleClass(element, className) {\n  if (!element || !className) {\n    return;\n  }\n\n  var classString = element.className;\n  var nameIndex = classString.indexOf(className);\n\n  if (nameIndex === -1) {\n    classString += '' + className;\n  } else {\n    classString = classString.substr(0, nameIndex) + classString.substr(nameIndex + className.length);\n  }\n\n  element.className = classString;\n}\n/**\n * @param {string} type\n * @returns {Date}\n */\n\nexport function getTime(type) {\n  if (type === 'start') {\n    return new Date().getTime() - 3600 * 1000 * 24 * 90;\n  } else {\n    return new Date(new Date().toDateString());\n  }\n}\n/**\n * @param {Function} func\n * @param {number} wait\n * @param {boolean} immediate\n * @return {*}\n */\n\nexport function debounce(func, wait, immediate) {\n  var timeout, args, context, timestamp, result;\n\n  var later = function later() {\n    // 据上一次触发时间间隔\n    var last = +new Date() - timestamp; // 上次被包装函数被调用时间间隔 last 小于设定时间间隔 wait\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null; // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用\n\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    context = this;\n    timestamp = +new Date();\n    var callNow = immediate && !timeout; // 如果延时不存在，重新设定延时\n\n    if (!timeout) timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n}\n/**\n * 深拷贝对象:创建一个新对象返回\n * @param {Object} source\n * @returns {Object}\n */\n\nexport function deepClone(source) {\n  if (!source && _typeof(source) !== 'object') {\n    throw new Error('error arguments', 'deepClone');\n  }\n\n  var targetObj = source.constructor === Array ? [] : {};\n  Object.keys(source).forEach(function (keys) {\n    if (source[keys] && _typeof(source[keys]) === 'object') {\n      targetObj[keys] = deepClone(source[keys]);\n    } else {\n      targetObj[keys] = source[keys];\n    }\n  });\n  return targetObj;\n} // /**\n//  * 深拷贝属性:将source中的属性【并且该属性也在target中】，值赋值给target\n//  * @param {Object} target\n//  * @param {Object} source\n//  */\n// export function deepCloneAttributes(target, source) {\n//   if (!source && typeof source !== 'object' && !target && typeof target !== 'object') {\n//     throw new Error('error arguments', 'deepCloneAttributes')\n//   }\n//   Object.keys(target).forEach(keys => {\n//     if (target[keys] && typeof target[keys] === 'object') {\n//       target[keys] = deepCloneAttributes(target[keys], source[keys])\n//     } else {\n//       target[keys] = source[keys]\n//     }\n//   })\n// }\n\n/**\n * @param {Array} arr\n * @returns {Array}\n */\n\nexport function uniqueArr(arr) {\n  return Array.from(new Set(arr));\n}\n/**\n * @returns {string}\n */\n\nexport function createUniqueString() {\n  var timestamp = +new Date() + '';\n  var randomNum = parseInt((1 + Math.random()) * 65536) + '';\n  return (+(randomNum + timestamp)).toString(32);\n}\n/**\n * Check if an element has a class\n * @param {HTMLElement} elm\n * @param {string} cls\n * @returns {boolean}\n */\n\nexport function hasClass(ele, cls) {\n  return !!ele.className.match(new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)'));\n}\n/**\n * Add class to element\n * @param {HTMLElement} elm\n * @param {string} cls\n */\n\nexport function addClass(ele, cls) {\n  if (!hasClass(ele, cls)) ele.className += ' ' + cls;\n}\n/**\n * Remove class from element\n * @param {HTMLElement} elm\n * @param {string} cls\n */\n\nexport function removeClass(ele, cls) {\n  if (hasClass(ele, cls)) {\n    var reg = new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)');\n    ele.className = ele.className.replace(reg, ' ');\n  }\n}",null]}