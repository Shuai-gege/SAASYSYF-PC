{"remainingRequest":"D:\\ysyf\\iguard-vue01\\node_modules\\babel-loader\\lib\\index.js!D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ysyf\\iguard-vue01\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ysyf\\iguard-vue01\\src\\views\\angel\\tresidence\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ysyf\\iguard-vue01\\src\\views\\angel\\tresidence\\index.vue","mtime":1586084705000},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586085021683},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\babel-loader\\lib\\index.js","mtime":1586085013966},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586085021683},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\vue-loader\\lib\\index.js","mtime":1586085255129}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\ysyf\\\\iguard-vue01\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:\\\\ysyf\\\\iguard-vue01\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _tresidence = require(\"@/api/angel/tresidence/tresidence\");\n\nvar _tgateway = require(\"@/api/angel/tgateway/tgateway\");\n\nvar _tarea = require(\"@/api/angel/tarea/tarea\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _dateUtil = require(\"@/utils/dateUtil\");\n\nvar _utils = require(\"@/utils\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar token = (0, _auth.getToken)();\nvar entityVO = {\n  id: '',\n  provinceId: '',\n  cityId: '',\n  areaId: '',\n  townshipId: '',\n  villageName: '',\n  buildingName: '',\n  unit: '',\n  houseNo: '',\n  description: '',\n  gpsX: '',\n  gpsY: '',\n  gatewayId: '',\n  status: ''\n};\nvar _default = {\n  name: \"tresidence\",\n  components: {\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      list: null,\n      // 户籍查询结果\n      listGateway: null,\n      // 网关查询结果\n      listArea: null,\n      // 省查询结果\n      listCity: null,\n      // 市查询结果\n      listVillage: null,\n      // 区查询结果\n      total: 0,\n      tableKey: 0,\n      listLoading: false,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        id: '',\n        provinceId: '',\n        cityId: '',\n        areaId: '',\n        townshipId: '',\n        villageName: '',\n        buildingName: '',\n        unit: '',\n        houseNo: '',\n        description: '',\n        gpsX: '',\n        gpsY: '',\n        gatewayId: '',\n        status: ''\n      },\n      // 户籍查询参数\n      listGatewayQuery: {\n        id: '',\n        gatewayNo: '',\n        gatewayId: '',\n        modelId: '',\n        residenceId: '',\n        onlineStatus: ''\n      },\n      // 网关查询参数\n      listAreaQuery: {\n        id: '',\n        areaName: '',\n        parentId: ''\n      },\n      // 省市区查询参数\n      headersObj: {\n        'LinkAdmin-Token': token\n      },\n      activeName: 'first',\n      dialogVisibleEdit: false,\n      dialogVisibleAdd: false,\n      dialogType: 'new',\n      entityVO: Object.assign({}, entityVO)\n    };\n  },\n  watch: {\n    searchDeptName: function searchDeptName(val) {\n      this.$refs.serchDeptTree.filter(val);\n    }\n  },\n  created: function created() {\n    this.getList();\n    this.getGatewayList();\n    this.getAreaList(0);\n  },\n  methods: {\n    getAreaList: function () {\n      var _getAreaList = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(parentId) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.listLoading = true;\n                this.listAreaQuery.parentId = parentId; // If the Promise is rejected, the rejected value is thrown.\n\n                _context.prev = 2;\n                _context.next = 5;\n                return (0, _tarea.tarealist)(this.listAreaQuery);\n\n              case 5:\n                res = _context.sent;\n                this.listLoading = false;\n\n                if (parentId == '0') {\n                  this.listArea = res.result.rows;\n                }\n\n                if (parentId.length > 1) {\n                  if (parentId.substring(2, 4) == '00') {\n                    this.listCity = res.result.rows;\n                  }\n\n                  if (parentId.substring(2, 4) != '00' && parentId.substring(4, 6) == '00') {\n                    this.listVillage = res.result.rows;\n                  }\n                } // this.total = res.result.records\n\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                this.listLoading = false;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 11]]);\n      }));\n\n      function getAreaList(_x) {\n        return _getAreaList.apply(this, arguments);\n      }\n\n      return getAreaList;\n    }(),\n    getGatewayList: function () {\n      var _getGatewayList = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.listLoading = true; // If the Promise is rejected, the rejected value is thrown.\n\n                _context2.prev = 1;\n                _context2.next = 4;\n                return (0, _tgateway.tgatewaylist)(this.listGatewayQuery);\n\n              case 4:\n                res = _context2.sent;\n                this.listLoading = false;\n                this.listGateway = res.result.rows; // this.total = res.result.records\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                this.listLoading = false;\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 9]]);\n      }));\n\n      function getGatewayList() {\n        return _getGatewayList.apply(this, arguments);\n      }\n\n      return getGatewayList;\n    }(),\n    getList: function () {\n      var _getList = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.listLoading = true; // If the Promise is rejected, the rejected value is thrown.\n\n                _context3.prev = 1;\n                _context3.next = 4;\n                return (0, _tresidence.tresidencelistAll)(this.listQuery);\n\n              case 4:\n                res = _context3.sent;\n                this.listLoading = false;\n                this.list = res.result.rows;\n                this.total = res.result.records;\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](1);\n                this.listLoading = false;\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 10]]);\n      }));\n\n      function getList() {\n        return _getList.apply(this, arguments);\n      }\n\n      return getList;\n    }(),\n    // 查询\n    handleSearch: function handleSearch() {\n      this.getList();\n    },\n    // 点击编辑按钮触发\n    handleEdit: function handleEdit(scope) {\n      this.dialogVisibleEdit = true;\n      this.entityVO = (0, _utils.deepClone)(scope.row);\n    },\n    // 点击新增按钮触发\n    handleAdd: function handleAdd(scope) {\n      this.dialogVisibleAdd = true;\n    },\n    // 编辑功能结束，点击确定按钮触发\n    confirmTresidenceEdit: function () {\n      var _confirmTresidenceEdit = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var res, result;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _tresidence.tresidenceedit)(this.entityVO);\n\n              case 2:\n                res = _context4.sent;\n                result = res.code;\n\n                if (result == 20000) {\n                  this.$message({\n                    showClose: true,\n                    message: '编辑成功',\n                    type: 'success'\n                  });\n                  this.dialogVisibleEdit = false;\n                  this.getList();\n                }\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function confirmTresidenceEdit() {\n        return _confirmTresidenceEdit.apply(this, arguments);\n      }\n\n      return confirmTresidenceEdit;\n    }(),\n    // 新增功能结束，点击确定按钮触发\n    confirmTresidenceAdd: function () {\n      var _confirmTresidenceAdd = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var res, result;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _tresidence.tresidenceadd)(this.entityVO);\n\n              case 2:\n                res = _context5.sent;\n                result = res.code;\n\n                if (result == 20000) {\n                  this.$message({\n                    showClose: true,\n                    message: '新增成功',\n                    type: 'success'\n                  });\n                  this.dialogVisibleAdd = false;\n                  this.getList();\n                }\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function confirmTresidenceAdd() {\n        return _confirmTresidenceAdd.apply(this, arguments);\n      }\n\n      return confirmTresidenceAdd;\n    }(),\n    // 点击删除按钮触发 删除生成的表的记录\n    handleDelete: function () {\n      var _handleDelete = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(scope) {\n        var _this = this;\n\n        var h;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                h = this.$createElement;\n                this.entityVO = (0, _utils.deepClone)(scope.row);\n                this.$msgbox({\n                  title: '删除消息',\n                  message: h('p', null, [h('span', null, '确定要删除 '), h('i', {\n                    style: 'color: teal'\n                  }, '这条记录吗?')]),\n                  showCancelButton: true,\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  beforeClose: function () {\n                    var _beforeClose = (0, _asyncToGenerator2.default)(\n                    /*#__PURE__*/\n                    regeneratorRuntime.mark(function _callee6(action, instance, done) {\n                      var res;\n                      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                        while (1) {\n                          switch (_context6.prev = _context6.next) {\n                            case 0:\n                              if (!(action === 'confirm')) {\n                                _context6.next = 7;\n                                break;\n                              }\n\n                              _context6.next = 3;\n                              return (0, _tresidence.tresidencedelete)(_this.entityVO);\n\n                            case 3:\n                              res = _context6.sent;\n\n                              if (res.code == 20000) {\n                                done();\n                              }\n\n                              _context6.next = 8;\n                              break;\n\n                            case 7:\n                              done();\n\n                            case 8:\n                            case \"end\":\n                              return _context6.stop();\n                          }\n                        }\n                      }, _callee6);\n                    }));\n\n                    function beforeClose(_x3, _x4, _x5) {\n                      return _beforeClose.apply(this, arguments);\n                    }\n\n                    return beforeClose;\n                  }()\n                }).then(function (action) {\n                  _this.$message({\n                    showClose: true,\n                    type: 'success',\n                    message: '删除成功'\n                  });\n\n                  _this.getList();\n                });\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function handleDelete(_x2) {\n        return _handleDelete.apply(this, arguments);\n      }\n\n      return handleDelete;\n    }(),\n    //状态转换\n    statusChange: function statusChange(row, column) {\n      var status = row.status;\n\n      if (status == '0') {\n        return '启用';\n      }\n\n      if (status == '1') {\n        return '停用';\n      }\n    }\n  }\n};\nexports.default = _default;",null]}