{"remainingRequest":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\src\\views\\permission\\permission.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\src\\views\\permission\\permission.vue","mtime":1577239198000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import the component\nimport Treeselect from '@riophae/vue-treeselect'\n// import the styles\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport IconSelect from '@/components/IconSelect'\nimport permission from '@/directive/permission/index.js' // 权限判断指令\nimport {\n  permissions,\n  addPermission,\n  updatePermission,\n  deletePermission\n} from '@/api/permission/permission'\nimport { deepClone } from '@/utils'\nconst defaultPermission = {\n  id: undefined,\n  name: '',\n  parentId: undefined,\n  parentName: '',\n  url: '',\n  types: 0,\n  sorts: undefined,\n  component_name: '',\n  component_path: '',\n  icon: '',\n  cache: 0,\n  hidden: 0,\n  i_frame: 0\n}\nexport default {\n  name: 'Permission',\n  components: { Treeselect, IconSelect },\n  directives: { permission },\n  data() {\n    return {\n      defaultProps: {\n        children: 'childrens',\n        label: 'name'\n      },\n      permission: Object.assign({}, defaultPermission),\n      permissions: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      filterText: '',\n      rules: {\n        types: [\n          { required: true, message: '请选择权限类型', trigger: 'change' }\n        ],\n        name: [\n          { required: true, message: '请输入权限名', trigger: 'blur' },\n          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n        ],\n        url: [{ required: true, message: '请输入路由地址', trigger: 'blur' }],\n        parentId: [\n          { required: true, message: '请选择上级权限', trigger: 'change' }\n        ]\n      }\n    }\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val)\n    }\n  },\n  created() {\n    this.getPermissions()\n  },\n  methods: {\n    async getPermissions() {\n      const res = await permissions()\n      const result = res.result\n      this.diGuiTree(result)\n      this.permissions = [{ id: 0, name: '权限树', childrens: result }]\n    },\n    filterNode(value, data) {\n      if (!value) return true\n      return data.name.indexOf(value) !== -1\n    },\n    diGuiTree(item) {\n      // 递归便利树结构\n      item.forEach(item => {\n        item.childrens === '' ||\n        item.childrens === undefined ||\n        item.childrens === null\n          ? delete item.childrens\n          : this.diGuiTree(item.childrens)\n      })\n    },\n    normalizer(node) {\n      return {\n        id: node.id,\n        label: node.name,\n        children: node.childrens\n      }\n    },\n    selected(name) {\n      this.permission.icon = name\n    },\n    handleCreate(data) {\n      this.dialogType = 'new'\n      this.dialogVisible = true\n      this.permission = Object.assign({}, defaultPermission)\n      if (data != null) {\n        this.permission.parentId = data.id\n        this.permission.parentName = data.name\n      }\n    },\n\n    async handleEdit(node, data) {\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.permission = deepClone(data)\n      const parent = node.parent.data\n      this.permission.parentId = parent.id\n      this.permission.parentName = parent.name\n    },\n    async confirmPermission() {\n      const isEdit = this.dialogType === 'edit'\n      if (isEdit) {\n        await updatePermission(this.permission)\n      } else {\n        await addPermission(this.permission)\n      }\n      this.dialogVisible = false\n      this.$message({\n        showClose: true,\n        message: '保存成功',\n        type: 'success'\n      })\n      this.getPermissions()\n    },\n    handleDelete(data) {\n      this.$confirm('确认删除?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(async() => {\n          await deletePermission(data.id)\n          this.$message({\n            showClose: true,\n            message: '删除成功',\n            type: 'success'\n          })\n          this.getPermissions()\n        })\n        .catch(err => {\n          console.error(err)\n        })\n    }\n  }\n}\n",null]}