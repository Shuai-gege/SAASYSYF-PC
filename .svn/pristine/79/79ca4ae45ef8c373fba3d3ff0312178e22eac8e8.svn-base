{"remainingRequest":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\thread-loader\\dist\\cjs.js!D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\src\\store\\modules\\app.js","dependencies":[{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\src\\store\\modules\\app.js","mtime":1577239198000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\selfcompanyworkspace\\vue-link-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import variables from '@/styles/element-variables.scss';\nimport defaultSettings from '@/settings';\nvar showSettings = defaultSettings.showSettings,\n    tagsView = defaultSettings.tagsView,\n    fixedHeader = defaultSettings.fixedHeader,\n    sidebarLogo = defaultSettings.sidebarLogo;\nvar state = {\n  sidebar: {\n    opened: localStorage.getItem('sidebarStatus') !== null ? JSON.parse(localStorage.getItem('sidebarStatus')) : true,\n    withoutAnimation: false\n  },\n  device: 'desktop',\n  size: localStorage.getItem('size') || 'medium',\n  theme: variables.theme,\n  showSettings: localStorage.getItem('showSettings') !== null ? JSON.parse(localStorage.getItem('showSettings')) : showSettings,\n  tagsView: localStorage.getItem('tagsView') !== null ? JSON.parse(localStorage.getItem('tagsView')) : tagsView,\n  fixedHeader: localStorage.getItem('fixedHeader') !== null ? JSON.parse(localStorage.getItem('fixedHeader')) : fixedHeader,\n  sidebarLogo: localStorage.getItem('sidebarLogo') !== null ? JSON.parse(localStorage.getItem('sidebarLogo')) : sidebarLogo\n};\nvar mutations = {\n  TOGGLE_SIDEBAR: function TOGGLE_SIDEBAR(state) {\n    state.sidebar.opened = !state.sidebar.opened;\n    state.sidebar.withoutAnimation = false;\n\n    if (state.sidebar.opened) {\n      localStorage.setItem('sidebarStatus', true);\n    } else {\n      localStorage.setItem('sidebarStatus', false);\n    }\n  },\n  CLOSE_SIDEBAR: function CLOSE_SIDEBAR(state, withoutAnimation) {\n    localStorage.setItem('sidebarStatus', false);\n    state.sidebar.opened = false;\n    state.sidebar.withoutAnimation = withoutAnimation;\n  },\n  TOGGLE_DEVICE: function TOGGLE_DEVICE(state, device) {\n    state.device = device;\n  },\n  SET_SIZE: function SET_SIZE(state, size) {\n    state.size = size;\n    localStorage.setItem('size', size);\n  },\n  CHANGE_SETTING: function CHANGE_SETTING(state, _ref) {\n    var key = _ref.key,\n        value = _ref.value;\n\n    if (state.hasOwnProperty(key)) {\n      state[key] = value;\n      localStorage.setItem(key, value);\n    }\n  }\n};\nvar actions = {\n  toggleSideBar: function toggleSideBar(_ref2) {\n    var commit = _ref2.commit;\n    commit('TOGGLE_SIDEBAR');\n  },\n  closeSideBar: function closeSideBar(_ref3, _ref4) {\n    var commit = _ref3.commit;\n    var withoutAnimation = _ref4.withoutAnimation;\n    commit('CLOSE_SIDEBAR', withoutAnimation);\n  },\n  toggleDevice: function toggleDevice(_ref5, device) {\n    var commit = _ref5.commit;\n    commit('TOGGLE_DEVICE', device);\n  },\n  setSize: function setSize(_ref6, size) {\n    var commit = _ref6.commit;\n    commit('SET_SIZE', size);\n  },\n  changeSetting: function changeSetting(_ref7, data) {\n    var commit = _ref7.commit;\n    commit('CHANGE_SETTING', data);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",null]}