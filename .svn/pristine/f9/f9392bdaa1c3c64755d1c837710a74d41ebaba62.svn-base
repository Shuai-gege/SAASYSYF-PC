{"remainingRequest":"D:\\ysyf\\iguard-vue01\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ysyf\\iguard-vue01\\node_modules\\babel-loader\\lib\\index.js!D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ysyf\\iguard-vue01\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ysyf\\iguard-vue01\\src\\views\\permission\\department.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ysyf\\iguard-vue01\\src\\views\\permission\\department.vue","mtime":1587202308068},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586085021683},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1586085236938},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\babel-loader\\lib\\index.js","mtime":1586085013966},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586085021683},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\vue-loader\\lib\\index.js","mtime":1586085255129}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\ysyf\\\\iguard-vue01\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:\\\\ysyf\\\\iguard-vue01\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import the component\nimport Treeselect from '@riophae/vue-treeselect'; // import the styles\n\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css';\nimport permission from '@/directive/permission/index.js'; // 权限判断指令\n\nimport { departments, subDepartments, addDpartment, updateDpartment, deleteDpartment, addCompany, addTopCompany, companySubDeptList } from '@/api/permission/department';\nimport { roles } from '@/api/permission/role';\nimport { deepClone } from '@/utils';\nvar defaultDepartment = {\n  id: undefined,\n  name: '',\n  parentId: undefined,\n  parentName: '',\n  levels: undefined,\n  deleted: 0,\n  deptCompany: 1\n};\nvar defaultUser = {\n  name: '',\n  password: '',\n  vserName: '',\n  roleIds: []\n};\nvar defaultCompany = {\n  department: {\n    id: undefined,\n    name: '',\n    parentId: undefined,\n    parentName: '',\n    levels: undefined,\n    deleted: 0,\n    deptCompany: 1\n  },\n  user: {\n    name: '',\n    password: '',\n    vserName: '',\n    roleIds: []\n  }\n};\nexport default {\n  name: 'Department',\n  components: {\n    Treeselect: Treeselect\n  },\n  directives: {\n    permission: permission\n  },\n  data: function data() {\n    var _rules;\n\n    var checkPhoneNo = function checkPhoneNo(rule, value, callback) {\n      if (!value) {\n        return callback(new Error('请输入正确的账号'));\n      }\n\n      if (!/^1(3|4|5|6|7|8|9)\\d{9}$/.test(value)) {\n        return callback(new Error('请输入正确的账号'));\n      }\n    };\n\n    return {\n      defaultProps: {\n        children: 'childrens',\n        label: 'name'\n      },\n      department: Object.assign({}, defaultDepartment),\n      user: Object.assign({}, defaultUser),\n      departments: [],\n      companySubDepartments: [],\n      roles: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      dialogTopCompanyAdd: false,\n      dialogVisibleEdit: false,\n      isCompany: false,\n      isDepartment: true,\n      company: Object.assign({}, defaultCompany),\n      levelsOptions: [{\n        label: '集团',\n        key: 0\n      }, {\n        label: '分公司',\n        key: 1\n      }, {\n        label: '部门',\n        key: 2\n      }],\n      filterText: '',\n      rules: (_rules = {}, _defineProperty(_rules, 'department.deptCompany', [{\n        required: true,\n        message: '请选择部门类型',\n        trigger: 'change'\n      }]), _defineProperty(_rules, 'department.name', [{\n        required: true,\n        message: '请输入部门名',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 15,\n        message: '长度在 2 到 15 个字符',\n        trigger: 'blur'\n      }]), _defineProperty(_rules, 'department.parentId', [{\n        required: true,\n        message: '请选择上级部门',\n        trigger: 'change'\n      }]), _defineProperty(_rules, 'user.name', [{\n        required: true,\n        message: '请输入正确的账号',\n        trigger: 'blur'\n      }, {\n        validator: checkPhoneNo,\n        trigger: 'blur'\n      }]), _defineProperty(_rules, 'user.vserName', [{\n        required: true,\n        message: '请输入姓名',\n        trigger: 'blur'\n      }]), _defineProperty(_rules, 'user.roleIds', [{\n        required: true,\n        message: '请选择角色',\n        trigger: 'change'\n      }]), _rules)\n    };\n  },\n  watch: {\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  created: function created() {\n    // this.getDepartments();\n    this.getRoles();\n    this.getSubDepartments();\n    this.getCompanySubDepartments();\n  },\n  methods: {\n    getSubDepartments: function () {\n      var _getSubDepartments = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res, result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return subDepartments();\n\n              case 2:\n                res = _context.sent;\n                result = res.result;\n                this.diGuiTree(result); // this.departments = [{ id: 0, name: '部门树', childrens: result }]\n\n                this.departments = result;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getSubDepartments() {\n        return _getSubDepartments.apply(this, arguments);\n      }\n\n      return getSubDepartments;\n    }(),\n    getCompanySubDepartments: function () {\n      var _getCompanySubDepartments = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res, result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return companySubDeptList();\n\n              case 2:\n                res = _context2.sent;\n                result = res.result;\n                this.diGuiTree(result); // this.departments = [{ id: 0, name: '部门树', childrens: result }]\n\n                this.companySubDepartments = result;\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getCompanySubDepartments() {\n        return _getCompanySubDepartments.apply(this, arguments);\n      }\n\n      return getCompanySubDepartments;\n    }(),\n    getRoles: function () {\n      var _getRoles = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return roles();\n\n              case 2:\n                res = _context3.sent;\n                this.roles = res.result;\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getRoles() {\n        return _getRoles.apply(this, arguments);\n      }\n\n      return getRoles;\n    }(),\n    getDeptCompany: function getDeptCompany() {\n      if (2 === this.company.department.deptCompany) {\n        this.isCompany = true;\n        this.isDepartment = false;\n      } else {\n        this.isCompany = false;\n        this.isDepartment = true;\n      }\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value) !== -1;\n    },\n    diGuiTree: function diGuiTree(item) {\n      var _this = this;\n\n      // 递归便利树结构\n      item.forEach(function (item) {\n        item.childrens === '' || item.childrens === undefined || item.childrens === null ? delete item.childrens : _this.diGuiTree(item.childrens);\n      });\n    },\n    normalizer: function normalizer(node) {\n      return {\n        id: node.id,\n        label: node.name,\n        children: node.childrens\n      };\n    },\n    topCompanyCreate: function topCompanyCreate(data) {\n      this.dialogTopCompanyAdd = true;\n      this.dialogType = 'topCompanyAdd';\n      this.company = Object.assign({}, defaultCompany);\n      this.user = Object.assign({}, defaultUser); // this.department.deptCompany = 2;\n      // if (data != null) {\n      //   this.department.parentName = data.name\n      // }\n    },\n    handleCreate: function handleCreate(data) {\n      this.dialogType = 'new';\n      this.dialogVisible = true;\n      this.company.department = Object.assign({}, defaultCompany.department);\n      this.company.user = Object.assign({}, defaultCompany.user); // if (data != null) {\n      //   this.department.parentId = data.id\n      //   this.department.parentName = data.name\n      // }\n\n      if (2 === this.company.department.deptCompany) {\n        this.isCompany = true;\n        this.isDepartment = false;\n      } else {\n        this.isCompany = false;\n        this.isDepartment = true;\n      }\n    },\n    handleEdit: function () {\n      var _handleEdit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(node, data) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.dialogType = 'edit';\n                this.dialogVisibleEdit = true;\n                this.company.department = deepClone(data); // const parent = node.parent.data;\n                // this.department.parentId = parent.id;\n                // this.department.parentName = parent.name;\n\n                if (2 === this.company.department.deptCompany) {\n                  this.isCompany = true;\n                  this.isDepartment = false;\n                } else {\n                  this.isCompany = false;\n                  this.isDepartment = true;\n                }\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function handleEdit(_x, _x2) {\n        return _handleEdit.apply(this, arguments);\n      }\n\n      return handleEdit;\n    }(),\n    confirmDepartment: function () {\n      var _confirmDepartment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(this.dialogType === 'edit')) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                _context5.next = 3;\n                return updateDpartment(this.company.department);\n\n              case 3:\n                _context5.next = 14;\n                break;\n\n              case 5:\n                if (!(this.dialogType === 'new')) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                if (this.company.user.password.length < 1) {\n                  this.company.user.password = this.company.user.name;\n                }\n\n                _context5.next = 9;\n                return addCompany(this.company);\n\n              case 9:\n                _context5.next = 14;\n                break;\n\n              case 11:\n                if (!(this.dialogType === 'topCompanyAdd')) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                _context5.next = 14;\n                return addTopCompany(this.company);\n\n              case 14:\n                this.dialogVisible = false;\n                this.dialogTopCompanyAdd = false;\n                this.dialogVisibleEdit = false;\n                this.$message({\n                  showClose: true,\n                  message: '保存成功',\n                  type: 'success'\n                });\n                this.getSubDepartments();\n\n              case 19:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function confirmDepartment() {\n        return _confirmDepartment.apply(this, arguments);\n      }\n\n      return confirmDepartment;\n    }(),\n    handleDelete: function handleDelete(data) {\n      var _this2 = this;\n\n      this.$confirm('确认删除?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return deleteDpartment(data.id);\n\n              case 2:\n                _this2.$message({\n                  showClose: true,\n                  message: '删除成功',\n                  type: 'success'\n                });\n\n                _this2.getSubDepartments();\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))).catch(function (err) {\n        console.error(err);\n      });\n    }\n  }\n};",null]}