{"remainingRequest":"D:\\ysyf\\iguard-vue01\\node_modules\\babel-loader\\lib\\index.js!D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ysyf\\iguard-vue01\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ysyf\\iguard-vue01\\src\\views\\iguard\\tbeventtypeconfig\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ysyf\\iguard-vue01\\src\\views\\iguard\\tbeventtypeconfig\\index.vue","mtime":1586159664000},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586085021683},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\babel-loader\\lib\\index.js","mtime":1586085013966},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586085021683},{"path":"D:\\ysyf\\iguard-vue01\\node_modules\\vue-loader\\lib\\index.js","mtime":1586085255129}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\ysyf\\\\iguard-vue01\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:\\\\ysyf\\\\iguard-vue01\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _tbeventtypeconfig = require(\"@/api/iguard/tbeventtypeconfig/tbeventtypeconfig\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _utils = require(\"@/utils\");\n\nvar _dateUtil = require(\"@/utils/dateUtil\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar token = (0, _auth.getToken)();\nvar entityVO = {\n  id: '',\n  eventType: '',\n  departmentId: '',\n  userIdA: '',\n  userIdB: '',\n  invalidUserId: '',\n  createTime: ''\n};\nvar _default = {\n  name: \"tbeventtypeconfig\",\n  components: {\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      list: null,\n      total: 0,\n      tableKey: 0,\n      listLoading: false,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        id: '',\n        eventType: '',\n        departmentId: '',\n        userIdA: '',\n        userIdB: '',\n        invalidUserId: '',\n        createTime: ''\n      },\n      userList: {\n        uid: '',\n        // 人员id\n        name: '',\n        // 人员登录名\n        vsername: '',\n        // 人员名称\n        mobile: '',\n        // 手机号码\n        state: '',\n        // 用户状态，1：正常  0：禁用\n        deptid: '',\n        // 部门id\n        jobid: '',\n        // 岗位id\n        email: '' // 邮箱\n\n      },\n      headersObj: {\n        'LinkAdmin-Token': token\n      },\n      activeName: 'first',\n      dialogVisibleEdit: false,\n      dialogVisibleAdd: false,\n      dialogType: 'new',\n      entityVO: Object.assign({}, entityVO),\n      value1: '',\n      falg: false,\n      //隐藏显示部门树形图\n      filterText: '',\n      //模糊查询所有部门\n      data: [],\n      //所属公司所有部门\n      departmentId: '',\n      //公司Id\n      defaultProps: {\n        //所属公司所有部门\n        children: 'childrens',\n        label: 'name'\n      },\n      restaurants: [],\n      //响应人list\n      restaurants1: [],\n      //响应人A\n      state1: '',\n      //响应人A\n      state2: '',\n      //响应人B\n      restaurants2: [],\n      //响应人B\n      state3: '',\n      //无效任务审批人\n      restaurants3: [] //无效任务审批人\n\n    };\n  },\n  watch: {\n    searchDeptName: function searchDeptName(val) {\n      this.$refs.serchDeptTree.filter(val);\n    },\n    //部门模糊查询\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  created: function created() {\n    this.getList();\n  },\n  mounted: function mounted() {\n    this.getcompanydeptlist();\n  },\n  methods: {\n    //树形图函数\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value) !== -1;\n    },\n    //事件类型list\n    getList: function () {\n      var _getList = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.listLoading = true; // If the Promise is rejected, the rejected value is thrown.\n\n                _context.prev = 1;\n                _context.next = 4;\n                return (0, _tbeventtypeconfig.tbeventtypeconfiglist)(this.listQuery);\n\n              case 4:\n                res = _context.sent;\n                this.listLoading = false;\n                this.list = res.result.rows;\n                this.total = res.result.records;\n                console.log(res);\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                this.listLoading = false;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 11]]);\n      }));\n\n      function getList() {\n        return _getList.apply(this, arguments);\n      }\n\n      return getList;\n    }(),\n    //获取登录人的所属公司list\n    getcompanydeptlist: function () {\n      var _getcompanydeptlist = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return (0, _tbeventtypeconfig.getcompanydept)(localStorage.getItem('uid'));\n\n              case 3:\n                res = _context2.sent;\n                this.data = res.result;\n                console.log(res);\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 8]]);\n      }));\n\n      function getcompanydeptlist() {\n        return _getcompanydeptlist.apply(this, arguments);\n      }\n\n      return getcompanydeptlist;\n    }(),\n    // 新建选中树形图的操作\n    xuan: function xuan(val) {\n      console.log(val);\n      this.filterText = val.name;\n      this.entityVO.departmentId = val.id;\n      this.userList.deptid = val.id;\n    },\n    // 编辑选中树形图的操作\n    xuan1: function xuan1(val) {\n      console.log(val);\n      this.entityVO.departmentName = val.name;\n      this.entityVO.departmentId = val.id;\n      this.userList.deptid = val.id;\n    },\n    // 查询\n    // handleSearch() {\n    //   this.getList();\n    // },\n    // 点击编辑按钮触发\n    handleEdit: function handleEdit(scope) {\n      this.dialogVisibleEdit = true;\n      this.entityVO = (0, _utils.deepClone)(scope.row);\n    },\n    // 点击新增按钮触发\n    handleAdd: function handleAdd(scope) {\n      this.dialogVisibleAdd = true;\n    },\n    // 编辑功能结束，点击确定按钮触发\n    confirmTbeventtypeconfigEdit: function () {\n      var _confirmTbeventtypeconfigEdit = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var res, result;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _tbeventtypeconfig.tbeventtypeconfigedit)(this.entityVO);\n\n              case 2:\n                res = _context3.sent;\n                result = res.code;\n\n                if (result == 20000) {\n                  this.$message({\n                    showClose: true,\n                    message: '编辑成功',\n                    type: 'success'\n                  });\n                  this.dialogVisibleEdit = false;\n                  this.getList();\n                }\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function confirmTbeventtypeconfigEdit() {\n        return _confirmTbeventtypeconfigEdit.apply(this, arguments);\n      }\n\n      return confirmTbeventtypeconfigEdit;\n    }(),\n    // 新增功能结束，点击确定按钮触发\n    confirmTbeventtypeconfigAdd: function () {\n      var _confirmTbeventtypeconfigAdd = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var res, result;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.entityVO.eventType == '')) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                this.$message({\n                  message: '请填写事件类型',\n                  type: 'warning'\n                });\n                _context4.next = 29;\n                break;\n\n              case 4:\n                if (!(this.filterText == '')) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                this.$message({\n                  message: '请选择部门',\n                  type: 'warning'\n                });\n                _context4.next = 29;\n                break;\n\n              case 8:\n                if (!(this.entityVO.userIdA == '')) {\n                  _context4.next = 12;\n                  break;\n                }\n\n                this.$message({\n                  message: '请选择响应人A',\n                  type: 'warning'\n                });\n                _context4.next = 29;\n                break;\n\n              case 12:\n                if (!(this.entityVO.userIdB == '')) {\n                  _context4.next = 16;\n                  break;\n                }\n\n                this.$message({\n                  message: '请选择响应人B',\n                  type: 'warning'\n                });\n                _context4.next = 29;\n                break;\n\n              case 16:\n                if (!(this.entityVO.invalidUserId == '')) {\n                  _context4.next = 20;\n                  break;\n                }\n\n                this.$message({\n                  message: '请选择无效任务审批人',\n                  type: 'warning'\n                });\n                _context4.next = 29;\n                break;\n\n              case 20:\n                if (!(this.entityVO.createTime == '')) {\n                  _context4.next = 24;\n                  break;\n                }\n\n                this.$message({\n                  message: '请选择创建时间',\n                  type: 'warning'\n                });\n                _context4.next = 29;\n                break;\n\n              case 24:\n                _context4.next = 26;\n                return (0, _tbeventtypeconfig.tbeventtypeconfigadd)(this.entityVO);\n\n              case 26:\n                res = _context4.sent;\n                result = res.code;\n\n                if (result == 20000) {\n                  this.$message({\n                    showClose: true,\n                    message: '新增成功',\n                    type: 'success'\n                  });\n                  this.dialogVisibleAdd = false;\n                  this.getList();\n                }\n\n              case 29:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function confirmTbeventtypeconfigAdd() {\n        return _confirmTbeventtypeconfigAdd.apply(this, arguments);\n      }\n\n      return confirmTbeventtypeconfigAdd;\n    }(),\n    // 点击删除按钮触发 删除生成的表的记录\n    handleDelete: function () {\n      var _handleDelete = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(scope) {\n        var _this = this;\n\n        var h;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                h = this.$createElement;\n                this.entityVO = (0, _utils.deepClone)(scope.row);\n                this.$msgbox({\n                  title: '删除消息',\n                  message: h('p', null, [h('span', null, '确定要删除 '), h('i', {\n                    style: 'color: teal'\n                  }, '这条记录吗?')]),\n                  showCancelButton: true,\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  beforeClose: function () {\n                    var _beforeClose = (0, _asyncToGenerator2.default)(\n                    /*#__PURE__*/\n                    regeneratorRuntime.mark(function _callee5(action, instance, done) {\n                      var res;\n                      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                        while (1) {\n                          switch (_context5.prev = _context5.next) {\n                            case 0:\n                              if (!(action === 'confirm')) {\n                                _context5.next = 7;\n                                break;\n                              }\n\n                              _context5.next = 3;\n                              return (0, _tbeventtypeconfig.tbeventtypeconfigdelete)(_this.entityVO);\n\n                            case 3:\n                              res = _context5.sent;\n\n                              if (res.code == 20000) {\n                                done();\n                              }\n\n                              _context5.next = 8;\n                              break;\n\n                            case 7:\n                              done();\n\n                            case 8:\n                            case \"end\":\n                              return _context5.stop();\n                          }\n                        }\n                      }, _callee5);\n                    }));\n\n                    function beforeClose(_x2, _x3, _x4) {\n                      return _beforeClose.apply(this, arguments);\n                    }\n\n                    return beforeClose;\n                  }()\n                }).then(function (action) {\n                  _this.$message({\n                    showClose: true,\n                    type: 'success',\n                    message: '删除成功'\n                  });\n\n                  _this.getList();\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function handleDelete(_x) {\n        return _handleDelete.apply(this, arguments);\n      }\n\n      return handleDelete;\n    }(),\n    // 时间格式化\n    formatDateTime: function formatDateTime(row, column) {\n      return (0, _dateUtil.formatTimeToStr)(row.createTime, 'yyyy-MM-dd hh:mm:ss');\n    },\n    //响应人A & 响应人B & 无效任务处理人\n    querySearch: function () {\n      var _querySearch = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(queryString, cb) {\n        var res, i, restaurants2;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return (0, _tbeventtypeconfig.getuserlist)(this.userList);\n\n              case 3:\n                res = _context7.sent;\n                this.restaurants1 = res.result.rows;\n\n                for (i = 0; i < res.result.rows.length; i++) {\n                  this.$set(this.restaurants1[i], 'value', this.restaurants1[i].name);\n                }\n\n                restaurants2 = queryString ? this.restaurants1.filter(this.createFilter(queryString)) : this.restaurants1;\n                _context7.next = 12;\n                break;\n\n              case 9:\n                _context7.prev = 9;\n                _context7.t0 = _context7[\"catch\"](0);\n                console.log(_context7.t0);\n\n              case 12:\n                cb(restaurants2);\n\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 9]]);\n      }));\n\n      function querySearch(_x5, _x6) {\n        return _querySearch.apply(this, arguments);\n      }\n\n      return querySearch;\n    }(),\n    //筛选\n    createFilter: function createFilter(queryString) {\n      return function (restaurant) {\n        return restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    // 分配人A\n    handleSelect: function handleSelect(item) {\n      this.entityVO.userIdA = item.uid;\n    },\n    // 分配人B\n    handleSelect1: function handleSelect1(item) {\n      this.entityVO.userIdB = item.uid;\n    },\n    // 无效任务审批人\n    handleSelect2: function handleSelect2(item) {\n      this.entityVO.invalidUserId = item.uid;\n    }\n  }\n};\nexports.default = _default;",null]}